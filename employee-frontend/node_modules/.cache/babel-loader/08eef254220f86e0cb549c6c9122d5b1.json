{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blast\\\\Spring Boot Projects\\\\EmployeeManager Project\\\\employee-frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { TopBar, Container, Table, TopRow, Cell, EmailCell, SmallCell, AddButton, Background } from \"./Components/Styles\";\nimport Row from \"./Components/Row\";\nimport AddModal from \"./Components/AddModal/AddModal\";\nimport { QueryClient, QueryClientProvider, useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [add, toggleAdd] = useState(false);\n\n  const getEmployees = async () => {\n    const result = await axios.get(\"http://localhost:8080/employees/\");\n    return result.data;\n  };\n\n  const addEmployee = async data => {\n    const {\n      data: response\n    } = await axios.post(\"http://localhost:8080/employees/\", data);\n    return response.data;\n  };\n\n  const {\n    isLoading,\n    error,\n    data,\n    status\n  } = useQuery([\"employees\"], getEmployees);\n\n  const closeModal = () => {\n    toggleAdd(false);\n  };\n\n  useEffect(() => {\n    if (data) {\n      setEmployees(data);\n    }\n  }, [data]);\n  const queryClient = new QueryClient();\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [add && /*#__PURE__*/_jsxDEV(AddModal, {\n        closeModal: closeModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        children: [/*#__PURE__*/_jsxDEV(TopBar, {\n          children: \"Employee Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(AddButton, {\n            onClick: () => toggleAdd(true),\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TopRow, {\n              children: [/*#__PURE__*/_jsxDEV(Cell, {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EmailCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SmallCell, {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SmallCell, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(Row, {\n              employee: employee\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iOHMAr0GnjI25Xkt3qpZiL7ESlY=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","TopBar","Container","Table","TopRow","Cell","EmailCell","SmallCell","AddButton","Background","Row","AddModal","QueryClient","QueryClientProvider","useQuery","App","employees","setEmployees","add","toggleAdd","getEmployees","result","get","data","addEmployee","response","post","isLoading","error","status","closeModal","queryClient","map","employee"],"sources":["C:/Users/Blast/Spring Boot Projects/EmployeeManager Project/employee-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport {\n  TopBar,\n  Container,\n  Table,\n  TopRow,\n  Cell,\n  EmailCell,\n  SmallCell,\n  AddButton,\n  Background,\n} from \"./Components/Styles\";\nimport { Employee, EmployeeRow } from \"./Components/Types\";\nimport Row from \"./Components/Row\";\nimport AddModal from \"./Components/AddModal/AddModal\";\nimport {\n  QueryClient,\n  QueryClientProvider,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nfunction App() {\n  const [employees, setEmployees] = useState<EmployeeRow[]>([]);\n  const [add, toggleAdd] = useState<boolean>(false);\n\n  const getEmployees = async () => {\n    const result = await axios.get(\"http://localhost:8080/employees/\");\n    return result.data;\n  };\n\n  const addEmployee = async (data: Employee) => {\n    const { data: response } = await axios.post(\n      \"http://localhost:8080/employees/\",\n      data\n    );\n    return response.data;\n  };\n\n  const { isLoading, error, data, status } = useQuery(\n    [\"employees\"],\n    getEmployees\n  );\n\n  const closeModal = () => {\n    toggleAdd(false);\n  };\n\n  useEffect(() => {\n    if (data) {\n      setEmployees(data);\n    }\n  }, [data]);\n\n  const queryClient = new QueryClient();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        {add && <AddModal closeModal={closeModal} />}\n        <Background>\n          <TopBar>Employee Manager</TopBar>\n          <Container>\n            <AddButton onClick={() => toggleAdd(true)}>Add Employee</AddButton>\n            <Table>\n              <TopRow>\n                <Cell>First Name</Cell>\n                <Cell>Last Name</Cell>\n                <EmailCell>Email</EmailCell>\n                <Cell>Role</Cell>\n                <SmallCell>Age</SmallCell>\n                <SmallCell></SmallCell>\n              </TopRow>\n              {employees.map((employee) => (\n                <Row employee={employee} />\n              ))}\n            </Table>\n          </Container>\n        </Background>\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}