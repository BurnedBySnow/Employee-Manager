{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blast\\\\Spring Boot Projects\\\\EmployeeManager Project\\\\employee-frontend\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { TopBar, Container, Table, TopRow, Cell, EmailCell, SmallCell, AddButton, Background } from \"./Components/Styles\";\nimport Row from \"./Components/Row\";\nimport AddModal from \"./Components/AddModal/AddModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [employees, setEmployees] = useState([]);\n  const [add, toggleAdd] = useState(false);\n\n  const getEmployees = () => {\n    axios.get(\"http://localhost:8080/employees/\").then(response => {\n      console.log(response);\n      console.log(response.data);\n      const myRepo = response.data;\n      setEmployees(myRepo);\n    });\n  }; // const addEmployee = () => {\n  //   axios.post(\"http://localhost:8080/employees/\", {\n  //   })\n  // }\n\n\n  useEffect(() => getEmployees(), []);\n\n  const closeModal = () => {\n    toggleAdd(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [add && /*#__PURE__*/_jsxDEV(AddModal, {\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Background, {\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        children: \"Employee Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(AddButton, {\n          onClick: () => toggleAdd(true),\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TopRow, {\n            children: [/*#__PURE__*/_jsxDEV(Cell, {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EmailCell, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Cell, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SmallCell, {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SmallCell, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(Row, {\n            add: add,\n            employee: employee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"emImy6EP8XaPgZV3Zy8erLO6u3g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","TopBar","Container","Table","TopRow","Cell","EmailCell","SmallCell","AddButton","Background","Row","AddModal","App","employees","setEmployees","add","toggleAdd","getEmployees","get","then","response","console","log","data","myRepo","closeModal","map","employee"],"sources":["C:/Users/Blast/Spring Boot Projects/EmployeeManager Project/employee-frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nimport {\n  TopBar,\n  Container,\n  Table,\n  TopRow,\n  Cell,\n  EmailCell,\n  SmallCell,\n  AddButton,\n  Background,\n} from \"./Components/Styles\";\nimport { Employee } from \"./Components/Types\";\nimport Row from \"./Components/Row\";\nimport AddModal from \"./Components/AddModal/AddModal\";\n\nfunction App() {\n  const [employees, setEmployees] = useState<Employee[]>([]);\n  const [add, toggleAdd] = useState<boolean>(false);\n\n  const getEmployees = () => {\n    axios.get(\"http://localhost:8080/employees/\").then((response) => {\n      console.log(response);\n      console.log(response.data);\n      const myRepo = response.data;\n      setEmployees(myRepo);\n    });\n  };\n\n  // const addEmployee = () => {\n  //   axios.post(\"http://localhost:8080/employees/\", {\n\n  //   })\n  // }\n\n  useEffect(() => getEmployees(), []);\n\n  const closeModal = () => {\n    toggleAdd(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {add && <AddModal closeModal={closeModal} />}\n      <Background>\n        <TopBar>Employee Manager</TopBar>\n        <Container>\n          <AddButton onClick={() => toggleAdd(true)}>Add Employee</AddButton>\n          <Table>\n            <TopRow>\n              <Cell>First Name</Cell>\n              <Cell>Last Name</Cell>\n              <EmailCell>Email</EmailCell>\n              <Cell>Role</Cell>\n              <SmallCell>Age</SmallCell>\n              <SmallCell></SmallCell>\n            </TopRow>\n            {employees.map((employee) => (\n              <Row add={add} employee={employee} />\n            ))}\n          </Table>\n        </Container>\n      </Background>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,MADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,SARF,EASEC,UATF,QAUO,qBAVP;AAYA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAa,EAAb,CAA1C;EACA,MAAM,CAACgB,GAAD,EAAMC,SAAN,IAAmBjB,QAAQ,CAAU,KAAV,CAAjC;;EAEA,MAAMkB,YAAY,GAAG,MAAM;IACzBjB,KAAK,CAACkB,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAoDC,QAAD,IAAc;MAC/DC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACAC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACG,IAAxB;MACAT,YAAY,CAACU,MAAD,CAAZ;IACD,CALD;EAMD,CAPD,CAJa,CAab;EACA;EAEA;EACA;;;EAEA1B,SAAS,CAAC,MAAMmB,YAAY,EAAnB,EAAuB,EAAvB,CAAT;;EAEA,MAAMQ,UAAU,GAAG,MAAM;IACvBT,SAAS,CAAC,KAAD,CAAT;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WACGD,GAAG,iBAAI,QAAC,QAAD;MAAU,UAAU,EAAEU;IAAtB;MAAA;MAAA;MAAA;IAAA,QADV,eAEE,QAAC,UAAD;MAAA,wBACE,QAAC,MAAD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD;QAAA,wBACE,QAAC,SAAD;UAAW,OAAO,EAAE,MAAMT,SAAS,CAAC,IAAD,CAAnC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,KAAD;UAAA,wBACE,QAAC,MAAD;YAAA,wBACE,QAAC,IAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,IAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE,QAAC,SAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE,QAAC,IAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE,QAAC,SAAD;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF,eAME,QAAC,SAAD;cAAA;cAAA;cAAA;YAAA,QANF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,EASGH,SAAS,CAACa,GAAV,CAAeC,QAAD,iBACb,QAAC,GAAD;YAAK,GAAG,EAAEZ,GAAV;YAAe,QAAQ,EAAEY;UAAzB;YAAA;YAAA;YAAA;UAAA,QADD,CATH;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GAjDQf,G;;KAAAA,G;AAmDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}