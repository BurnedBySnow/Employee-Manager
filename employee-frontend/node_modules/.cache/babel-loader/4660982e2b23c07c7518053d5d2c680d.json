{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blast\\\\Spring Boot Projects\\\\EmployeeManager Project\\\\employee-frontend\\\\src\\\\Components\\\\Row.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport EditForm from \"./EditForm/EditForm\";\nimport { StyledRow, Cell, RowContainer, EmailCell, SmallCell, SvgContainer } from \"./Styles\";\nimport { ReactComponent as Edit } from \"../images/pen-solid.svg\";\nimport { ReactComponent as Delete } from \"../images/trash-solid.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Row = props => {\n  _s();\n\n  const {\n    employee\n  } = props;\n  const [expanded, toggleExpanded] = useState(false);\n  const [toggledEditForm, setToggledEditForm] = useState(false);\n\n  const toggleEdit = () => {\n    setToggledEditForm(false);\n  };\n\n  const del = () => {\n    if (expanded) {\n      toggleExpanded(false);\n    }\n\n    props.deleteEmployee(props.id);\n  };\n\n  const toggleCheck = () => {\n    if (toggledEditForm && expanded) {\n      toggleExpanded(false);\n    } else if (toggledEditForm && !expanded) {\n      toggleExpanded(true);\n    } else {\n      toggleExpanded(true);\n      setToggledEditForm(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(RowContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledRow, {\n      expanded: expanded,\n      children: [/*#__PURE__*/_jsxDEV(Cell, {\n        children: employee.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: employee.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EmailCell, {\n        children: employee.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Cell, {\n        children: employee.role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmallCell, {\n        children: employee.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmallCell, {\n        children: /*#__PURE__*/_jsxDEV(SvgContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Edit, {\n            onClick: toggleCheck,\n            width: \"1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Delete, {\n            onClick: del,\n            width: \"1rem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), toggledEditForm && /*#__PURE__*/_jsxDEV(EditForm, {\n      currentEmployee: employee,\n      expanded: expanded,\n      toggleCheck: toggleCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Row, \"0fjxiaqrfhJE/n3kQy9v9Ikiwwo=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["useState","EditForm","StyledRow","Cell","RowContainer","EmailCell","SmallCell","SvgContainer","ReactComponent","Edit","Delete","Row","props","employee","expanded","toggleExpanded","toggledEditForm","setToggledEditForm","toggleEdit","del","deleteEmployee","id","toggleCheck","firstName","lastName","email","role","age"],"sources":["C:/Users/Blast/Spring Boot Projects/EmployeeManager Project/employee-frontend/src/Components/Row.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport EditForm from \"./EditForm/EditForm\";\r\nimport {\r\n  StyledRow,\r\n  Cell,\r\n  RowContainer,\r\n  EmailCell,\r\n  SmallCell,\r\n  SvgContainer,\r\n} from \"./Styles\";\r\nimport { Employee } from \"./Types\";\r\nimport { ReactComponent as Edit } from \"../images/pen-solid.svg\";\r\nimport { ReactComponent as Delete } from \"../images/trash-solid.svg\";\r\n\r\nconst Row = (props: {\r\n  employee: Employee;\r\n  deleteEmployee: (id: number) => Promise<void>;\r\n  id: number;\r\n  updateEmployee: (id: number, data: Employee) => Promise<void>;\r\n}) => {\r\n  const { employee } = props;\r\n  const [expanded, toggleExpanded] = useState<boolean>(false);\r\n  const [toggledEditForm, setToggledEditForm] = useState<boolean>(false);\r\n\r\n  const toggleEdit = () => {\r\n    setToggledEditForm(false);\r\n  };\r\n\r\n  const del = () => {\r\n    if (expanded) {\r\n      toggleExpanded(false);\r\n    }\r\n    props.deleteEmployee(props.id);\r\n  };\r\n\r\n  const toggleCheck = () => {\r\n    if (toggledEditForm && expanded) {\r\n      toggleExpanded(false);\r\n    } else if (toggledEditForm && !expanded) {\r\n      toggleExpanded(true);\r\n    } else {\r\n      toggleExpanded(true);\r\n      setToggledEditForm(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RowContainer>\r\n      <StyledRow expanded={expanded}>\r\n        <Cell>{employee.firstName}</Cell>\r\n        <Cell>{employee.lastName}</Cell>\r\n        <EmailCell>{employee.email}</EmailCell>\r\n        <Cell>{employee.role}</Cell>\r\n        <SmallCell>{employee.age}</SmallCell>\r\n        <SmallCell>\r\n          <SvgContainer>\r\n            <Edit onClick={toggleCheck} width=\"1rem\" />\r\n            <Delete onClick={del} width=\"1rem\" />\r\n          </SvgContainer>\r\n        </SmallCell>\r\n      </StyledRow>\r\n      {toggledEditForm && (\r\n        <EditForm\r\n          currentEmployee={employee}\r\n          expanded={expanded}\r\n          toggleCheck={toggleCheck}\r\n        />\r\n      )}\r\n    </RowContainer>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,YANF,QAOO,UAPP;AASA,SAASC,cAAc,IAAIC,IAA3B,QAAuC,yBAAvC;AACA,SAASD,cAAc,IAAIE,MAA3B,QAAyC,2BAAzC;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAKN;EAAA;;EACJ,MAAM;IAAEC;EAAF,IAAeD,KAArB;EACA,MAAM,CAACE,QAAD,EAAWC,cAAX,IAA6Bf,QAAQ,CAAU,KAAV,CAA3C;EACA,MAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAU,KAAV,CAAtD;;EAEA,MAAMkB,UAAU,GAAG,MAAM;IACvBD,kBAAkB,CAAC,KAAD,CAAlB;EACD,CAFD;;EAIA,MAAME,GAAG,GAAG,MAAM;IAChB,IAAIL,QAAJ,EAAc;MACZC,cAAc,CAAC,KAAD,CAAd;IACD;;IACDH,KAAK,CAACQ,cAAN,CAAqBR,KAAK,CAACS,EAA3B;EACD,CALD;;EAOA,MAAMC,WAAW,GAAG,MAAM;IACxB,IAAIN,eAAe,IAAIF,QAAvB,EAAiC;MAC/BC,cAAc,CAAC,KAAD,CAAd;IACD,CAFD,MAEO,IAAIC,eAAe,IAAI,CAACF,QAAxB,EAAkC;MACvCC,cAAc,CAAC,IAAD,CAAd;IACD,CAFM,MAEA;MACLA,cAAc,CAAC,IAAD,CAAd;MACAE,kBAAkB,CAAC,IAAD,CAAlB;IACD;EACF,CATD;;EAWA,oBACE,QAAC,YAAD;IAAA,wBACE,QAAC,SAAD;MAAW,QAAQ,EAAEH,QAArB;MAAA,wBACE,QAAC,IAAD;QAAA,UAAOD,QAAQ,CAACU;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAA,UAAOV,QAAQ,CAACW;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,SAAD;QAAA,UAAYX,QAAQ,CAACY;MAArB;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,IAAD;QAAA,UAAOZ,QAAQ,CAACa;MAAhB;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,SAAD;QAAA,UAAYb,QAAQ,CAACc;MAArB;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,SAAD;QAAA,uBACE,QAAC,YAAD;UAAA,wBACE,QAAC,IAAD;YAAM,OAAO,EAAEL,WAAf;YAA4B,KAAK,EAAC;UAAlC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,MAAD;YAAQ,OAAO,EAAEH,GAAjB;YAAsB,KAAK,EAAC;UAA5B;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAcGH,eAAe,iBACd,QAAC,QAAD;MACE,eAAe,EAAEH,QADnB;MAEE,QAAQ,EAAEC,QAFZ;MAGE,WAAW,EAAEQ;IAHf;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAxDD;;GAAMX,G;;KAAAA,G;AA0DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}